<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.q.reminder.reminder.mapper.RdTimeEntryMapping">

<select id="listOvertime" resultType="com.q.reminder.reminder.vo.OvertimeVo">
    SELECT
         SUM(CASE WHEN sc.`work` = 1 THEN (CASE WHEN (te.hours - 8) > 0 THEN (te.hours - 8) ELSE 0 END) ELSE 0 END) AS addWork
         ,spentOn AS `day`
         ,projectId
         ,userName
         ,userId
    FROM
        rd_time_entry te,
        r_project_info rp,
        s_holiday_config sc
    <where>
        AND te.projectId = rp.p_id
        AND rp.is_delete = 0
        AND rp.redmine_type = 2
        AND sc.`date` = te.spentOn
        <if test="vo.endTime != null and vo.endTime != ''">
            AND spentOn >= #{vo.startTime}
        </if>
        <if test="vo.endTime != null and vo.endTime != ''">
            AND spentOn <![CDATA[<=]]> #{vo.endTime}
        </if>
    </where>
    GROUP BY `day`, userName, userId, projectId
</select>

<select id="userinfoList" resultType="com.q.reminder.reminder.vo.UserInfoWrokVo">
    SELECT
        t.userId,
        t.userName,
        SUM(t.addWork) AS overtime,
        SUM(t.hours) AS totalTime,
        ROUND( SUM(t.hours) / (SUM(t.hours) - SUM( CASE WHEN t.addWork <![CDATA[<]]> 0 THEN 0 ELSE t.addWork END )), 2) employeeLoad
    FROM (
        SELECT
            res.spentOn,
            res.userId,
            res.userName,
            SUM(res.hours) AS hours,
            SUM(CASE WHEN sc.`work` = 1 THEN (CASE WHEN (res.hours - 8) > 0 THEN (res.hours - 8) ELSE 0 END) WHEN DAYOFWEEK(res.spentOn) IN (1,7) AND sc.`work` = 0 THEN res.hours  ELSE 0 END) AS addWork
        FROM
        (
        SELECT
            SUM( CASE WHEN (SELECT COUNT(*) FROM r_project_info WHERE p_id = re.projectId AND redmine_type = 2) > 0 THEN re.hours ELSE 0 END ) hours,
            re.userId,
            re.userName,
            re.spentOn
        FROM
            `rd_time_entry` re,
            `r_project_info` rp,
            `fs_user_member_info` fu
        <where>
            AND rp.redmine_type = 2
            AND re.projectId = rp.p_id
            AND fu.`name` = REPLACE(re.userName,' ','')
            AND fu.resign = 0
            <if test="vo.pid != null and vo.pid != ''">
                AND re.projectId = #{vo.pid}
            </if>
            <if test="vo.startTime != null and vo.startTime != ''">
                AND re.spentOn >= #{vo.startTime}
            </if>
            <if test="vo.endTime != null and vo.endTime != ''">
                AND re.spentOn <![CDATA[<=]]> #{vo.endTime}
            </if>
            <if test="vo.userId != null and vo.userId != ''">
                AND re.userId = #{vo.userId}
            </if>
        </where>
        GROUP BY
            re.spentOn, re.userId, re.userName
        ) res,
        s_holiday_config sc
        WHERE
            sc.date = res.spentOn
        GROUP BY
            res.spentOn,res.userId,res.userName
    ) t
    GROUP BY t.userId,t.userName
</select>

<select id="userTimeList" resultType="com.q.reminder.reminder.vo.UserInfoTimeVo">
    SELECT
        re.hours,
        re.userName,
        rp.p_name AS pname,
        re.spentOn
    FROM
        `rd_time_entry` re,
        r_project_info rp
    <where>
        re.projectId = rp.p_id
        AND rp.redmine_type = 2
        AND rp.is_delete = 0
        <if test="vo.pid != null and vo.pid != ''">
            AND re.projectId = #{vo.pid}
        </if>
        <if test="vo.userId != null and vo.userId != ''">
            AND re.userId = #{vo.userId}
        </if>
        <if test="vo.startTime != null and vo.startTime != ''">
            AND re.spentOn >= #{vo.startTime}
        </if>
        <if test="vo.endTime != null and vo.endTime != ''">
            AND re.spentOn <![CDATA[<=]]> #{vo.endTime}
        </if>
    </where>
    ORDER BY re.spentOn DESC
</select>

<select id="userOption" resultType="com.q.reminder.reminder.vo.OptionVo">
    SELECT
        userId AS id,
        userName AS `name`
    FROM
        `rd_time_entry` re,
        r_redmine_user_info ri
    WHERE
        ri.assignee_id = re.userId
      AND ri.redmine_type = 2
      AND ri.is_delete = 0
    GROUP BY
        re.userId,
        re.userName
</select>

<select id="listByProject" resultType="com.q.reminder.reminder.entity.RdTimeEntry">
    SELECT
        re.hours,
        re.projectId
    FROM
        `rd_time_entry` re,
        r_redmine_user_info ri
    <where>
        ri.assignee_id = re.userId
        AND ri.redmine_type = 2
        AND ri.is_delete = 0
        <if test="vo.startTime != null and vo.startTime != ''">
            AND re.spentOn >= #{vo.startTime}
        </if>
        <if test="vo.startTime != null and vo.startTime != ''">
            AND re.spentOn <![CDATA[<=]]> #{vo.endTime}
        </if>
    </where>
    </select>

<select id="listByProjectByDate" resultType="com.q.reminder.reminder.vo.ProjectCostVo">
        SELECT
            SUM(CASE WHEN sc.`work` = 1 THEN ( CASE WHEN ( te.hours - 8 ) > 0 THEN ( te.hours - 8 ) ELSE 0 END ) ELSE 0 END ) AS overtime,
            SUM(te.hours) AS peopleHours,
            SUM(te.hours)/w.hours AS peopleMonth,
            projectId AS pid,
            IFNULL(rp.budget,0) budget,
            rp.project_short_name AS shortName
        FROM
            rd_time_entry te,
            r_project_info rp,
            s_holiday_config sc,
            s_working_hours w
        WHERE
            te.projectId = rp.p_id
            AND rp.is_delete = 0
            AND rp.redmine_type = 2
            AND sc.`date` = te.spentOn
            AND DATE_FORMAT(te.spentOn,'%Y%m') = w.yyyymm
        <if test="vo.startTime != null and vo.startTime != ''">
            AND te.spentOn >= #{vo.startTime}
        </if>
        <if test="vo.startTime != null and vo.startTime != ''">
            AND te.spentOn <![CDATA[<=]]> #{vo.endTime}
        </if>
        GROUP BY te.projectId,rp.budget,shortName,w.yyyymm
    </select>

    <select id="listBySpentOnToCost" resultType="com.q.reminder.reminder.vo.ProjectCostVo">
        SELECT
            CONCAT( rt.spentOn, '~', rt.userId ) userDate,
            projectId AS pid,
            IFNULL( p.budget, 0 ) budget,
            p.project_short_name AS shortName,
            SUM( rt.hours )/ 8 / w.hours AS peopleMonth,
            SUM( rt.hours ) AS peopleHours,
            0.00 AS overtime
        FROM
            rd_time_entry rt,
            r_project_info p,
            s_working_hours w
        WHERE
            rt.projectId = p.p_id
          AND DATE_FORMAT( rt.spentOn, '%Y%m' ) = w.yyyymm
          AND p.is_delete = 0
          AND p.redmine_type = 2
        <if test="vo.pid != null and vo.pid != ''">
            AND p.p_id = #{vo.pid}
        </if>
        <if test="vo.startTime != null and vo.startTime != ''">
            AND rt.spentOn >= #{vo.startTime}
        </if>
        <if test="vo.startTime != null and vo.startTime != ''">
            AND rt.spentOn <![CDATA[<=]]> #{vo.endTime}
        </if>
        GROUP BY
            userDate,
            rt.projectId,
            w.yyyymm,
            p.p_id,
            p.budget,
            shortName
    </select>

    <select id="listByPidSpentOnToCost" resultType="com.q.reminder.reminder.vo.ProjectUserCostVo">
        SELECT
            rt.userName,
            rt.spentOn,
            CONCAT( rt.spentOn, '~', rt.userId ) userDate,
            SUM( rt.hours ) AS peopleHours,
            0.00 AS overtime,
            p.project_short_name AS shortName
        FROM
            rd_time_entry rt,
            r_project_info p
        WHERE
            rt.projectId = p.p_id
            AND p.is_delete = 0
            AND p.redmine_type = 2
            AND p.p_id = #{vo.pid}
        <if test="vo.startTime != null and vo.startTime != ''">
            AND rt.spentOn >= #{vo.startTime}
        </if>
        <if test="vo.startTime != null and vo.startTime != ''">
            AND rt.spentOn <![CDATA[<=]]> #{vo.endTime}
        </if>
        GROUP BY
            userDate,
            rt.userName,
            shortName,
            rt.spentOn
    </select>
</mapper>

